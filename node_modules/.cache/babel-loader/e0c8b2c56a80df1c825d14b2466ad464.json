{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"C:/xampp/htdocs/supervisior_site/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/xampp/htdocs/supervisior_site/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/xampp/htdocs/supervisior_site/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/xampp/htdocs/supervisior_site/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport stream from \"stream\";\n\nvar ZlibHeaderTransformStream = /*#__PURE__*/function (_stream$Transform) {\n  _inherits(ZlibHeaderTransformStream, _stream$Transform);\n\n  var _super = _createSuper(ZlibHeaderTransformStream);\n\n  function ZlibHeaderTransformStream() {\n    _classCallCheck(this, ZlibHeaderTransformStream);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ZlibHeaderTransformStream, [{\n    key: \"__transform\",\n    value: function __transform(chunk, encoding, callback) {\n      this.push(chunk);\n      callback();\n    }\n  }, {\n    key: \"_transform\",\n    value: function _transform(chunk, encoding, callback) {\n      if (chunk.length !== 0) {\n        this._transform = this.__transform; // Add Default Compression headers if no zlib headers are present\n\n        if (chunk[0] !== 120) {\n          // Hex: 78\n          var header = Buffer.alloc(2);\n          header[0] = 120; // Hex: 78\n\n          header[1] = 156; // Hex: 9C \n\n          this.push(header, encoding);\n        }\n      }\n\n      this.__transform(chunk, encoding, callback);\n    }\n  }]);\n\n  return ZlibHeaderTransformStream;\n}(stream.Transform);\n\nexport default ZlibHeaderTransformStream;","map":{"version":3,"names":["stream","ZlibHeaderTransformStream","chunk","encoding","callback","push","length","_transform","__transform","header","Buffer","alloc","Transform"],"sources":["C:/xampp/htdocs/supervisior_site/node_modules/axios/lib/helpers/ZlibHeaderTransformStream.js"],"sourcesContent":["\"use strict\";\n\nimport stream from \"stream\";\n\nclass ZlibHeaderTransformStream extends stream.Transform {\n  __transform(chunk, encoding, callback) {\n    this.push(chunk);\n    callback();\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (chunk.length !== 0) {\n      this._transform = this.__transform;\n\n      // Add Default Compression headers if no zlib headers are present\n      if (chunk[0] !== 120) { // Hex: 78\n        const header = Buffer.alloc(2);\n        header[0] = 120; // Hex: 78\n        header[1] = 156; // Hex: 9C \n        this.push(header, encoding);\n      }\n    }\n\n    this.__transform(chunk, encoding, callback);\n  }\n}\n\nexport default ZlibHeaderTransformStream;\n"],"mappings":"AAAA;;;;;;AAEA,OAAOA,MAAP,MAAmB,QAAnB;;IAEMC,yB;;;;;;;;;;;;;WACJ,qBAAYC,KAAZ,EAAmBC,QAAnB,EAA6BC,QAA7B,EAAuC;MACrC,KAAKC,IAAL,CAAUH,KAAV;MACAE,QAAQ;IACT;;;WAED,oBAAWF,KAAX,EAAkBC,QAAlB,EAA4BC,QAA5B,EAAsC;MACpC,IAAIF,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwB;QACtB,KAAKC,UAAL,GAAkB,KAAKC,WAAvB,CADsB,CAGtB;;QACA,IAAIN,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;UAAE;UACtB,IAAMO,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAa,CAAb,CAAf;UACAF,MAAM,CAAC,CAAD,CAAN,GAAY,GAAZ,CAFoB,CAEH;;UACjBA,MAAM,CAAC,CAAD,CAAN,GAAY,GAAZ,CAHoB,CAGH;;UACjB,KAAKJ,IAAL,CAAUI,MAAV,EAAkBN,QAAlB;QACD;MACF;;MAED,KAAKK,WAAL,CAAiBN,KAAjB,EAAwBC,QAAxB,EAAkCC,QAAlC;IACD;;;;EApBqCJ,MAAM,CAACY,S;;AAuB/C,eAAeX,yBAAf"},"metadata":{},"sourceType":"module"}